/*! For license information please see 4625d262.64899dbd.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[674777],{444493:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var s=t(824246),r=t(511151);const a={id:"k8s",title:"Deploying with Kubernetes",sidebar_label:"Kubernetes",description:"How to deploy Backstage to a Kubernetes cluster"},o=void 0,c={unversionedId:"deployment/k8s",id:"deployment/k8s",title:"Deploying with Kubernetes",description:"How to deploy Backstage to a Kubernetes cluster",source:"@site/../docs/deployment/k8s.md",sourceDirName:"deployment",slug:"/deployment/k8s",permalink:"/docs/deployment/k8s",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/../docs/deployment/k8s.md",tags:[],version:"current",frontMatter:{id:"k8s",title:"Deploying with Kubernetes",sidebar_label:"Kubernetes",description:"How to deploy Backstage to a Kubernetes cluster"},sidebar:"docs",previous:{title:"Docker",permalink:"/docs/deployment/docker"},next:{title:"Heroku",permalink:"/docs/deployment/heroku"}},i={},l=[{value:"Testing locally",id:"testing-locally",level:2},{value:"Creating a namespace",id:"creating-a-namespace",level:2},{value:"Creating the PostgreSQL database",id:"creating-the-postgresql-database",level:2},{value:"Creating a PostgreSQL secret",id:"creating-a-postgresql-secret",level:3},{value:"Creating a PostgreSQL persistent volume",id:"creating-a-postgresql-persistent-volume",level:3},{value:"Creating a PostgreSQL deployment",id:"creating-a-postgresql-deployment",level:3},{value:"Creating a PostgreSQL service",id:"creating-a-postgresql-service",level:3},{value:"Creating the Backstage instance",id:"creating-the-backstage-instance",level:2},{value:"Creating a Backstage secret",id:"creating-a-backstage-secret",level:3},{value:"Creating a Backstage deployment",id:"creating-a-backstage-deployment",level:3},{value:"Creating a Backstage service",id:"creating-a-backstage-service",level:3},{value:"Further steps",id:"further-steps",level:2},{value:"Set up a more reliable volume",id:"set-up-a-more-reliable-volume",level:3},{value:"Expose the Backstage service",id:"expose-the-backstage-service",level:3},{value:"Update the Deployment image",id:"update-the-deployment-image",level:3}];function d(e){const n=Object.assign({p:"p",a:"a",em:"em",h2:"h2",pre:"pre",code:"code",h3:"h3",blockquote:"blockquote",strong:"strong"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://kubernetes.io/",children:"Kubernetes"})," is a system for deploying, scaling and\nmanaging containerized applications. Backstage is designed to fit this model and\nrun as a stateless application with an external PostgreSQL database."]}),"\n",(0,s.jsxs)(n.p,{children:["There are many different tools and patterns for Kubernetes clusters, so the best\nway to deploy to an existing Kubernetes setup is ",(0,s.jsx)(n.em,{children:"the same way"})," you deploy\neverything else."]}),"\n",(0,s.jsxs)(n.p,{children:["This guide covers basic Kubernetes definitions needed to get Backstage up and\nrunning in a typical cluster. The object definitions might look familiar, since\nthe Backstage software catalog\n",(0,s.jsx)(n.a,{href:"/docs/features/software-catalog/descriptor-format",children:"also uses"})," the Kubernetes\nobject format for its entity definition files!"]}),"\n",(0,s.jsx)(n.h2,{id:"testing-locally",children:"Testing locally"}),"\n",(0,s.jsxs)(n.p,{children:["To test out these concepts locally before deploying to a production Kubernetes\ncluster, first install ",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/tools/",children:"kubectl"}),", the\nKubernetes command-line tool."]}),"\n",(0,s.jsxs)(n.p,{children:["Next, install ",(0,s.jsx)(n.a,{href:"https://minikube.sigs.k8s.io/docs/start/",children:"minikube"}),". This creates\na single-node Kubernetes cluster on your local machine:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'# Assumes Mac + Homebrew; see the minikube site for other installations\n$ brew install minikube\n$ minikube start\n\n...\nDone! kubectl is now configured to use "minikube" cluster and "default" namespace by default.\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Now you can run ",(0,s.jsx)(n.code,{children:"kubectl"})," commands and have changes applied to the minikube\ncluster. You should be able to see the ",(0,s.jsx)(n.code,{children:"kube-system"})," Kubernetes pods running:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl get pods -A\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When you're done with the tutorial, use ",(0,s.jsx)(n.code,{children:"minikube stop"})," to halt the cluster and\nfree up resources."]}),"\n",(0,s.jsx)(n.h2,{id:"creating-a-namespace",children:"Creating a namespace"}),"\n",(0,s.jsxs)(n.p,{children:["Deployments in Kubernetes are commonly assigned to their own\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",children:"namespace"}),"\nto isolate services in a multi-tenant environment."]}),"\n",(0,s.jsxs)(n.p,{children:["This can be done through ",(0,s.jsx)(n.code,{children:"kubectl"})," directly:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl create namespace backstage\nnamespace/backstage created\n"})}),"\n",(0,s.jsx)(n.p,{children:"Alternatively, create and apply a Namespace definition:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/namespace.yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: backstage\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/namespace.yaml\nnamespace/backstage created\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-the-postgresql-database",children:"Creating the PostgreSQL database"}),"\n",(0,s.jsx)(n.p,{children:"Backstage in production uses PostgreSQL as a database. To isolate the database\nfrom Backstage app deployments, we can create a separate Kubernetes deployment\nfor PostgreSQL."}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-postgresql-secret",children:"Creating a PostgreSQL secret"}),"\n",(0,s.jsx)(n.p,{children:"First, create a Kubernetes Secret for the PostgreSQL username and password. This\nwill be used by both the PostgreSQL database and Backstage deployments:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/postgres-secrets.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: postgres-secrets\n  namespace: backstage\ntype: Opaque\ndata:\n  POSTGRES_USER: YmFja3N0YWdl\n  POSTGRES_PASSWORD: aHVudGVyMg==\n"})}),"\n",(0,s.jsx)(n.p,{children:"The data in Kubernetes secrets are base64-encoded. The values can be generated\non the command line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'$ echo -n "backstage" | base64\nYmFja3N0YWdl\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Note: Secrets are base64-encoded, but not encrypted. Be sure to enable\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/",children:"Encryption at Rest"}),"\nfor the cluster. For storing secrets in Git, consider\n",(0,s.jsx)(n.a,{href:"https://learnk8s.io/kubernetes-secrets-in-git",children:"SealedSecrets or other solutions"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The secrets can now be applied to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/postgres-secrets.yaml\nsecret/postgres-secrets created\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-postgresql-persistent-volume",children:"Creating a PostgreSQL persistent volume"}),"\n",(0,s.jsxs)(n.p,{children:["PostgreSQL needs a persistent volume to store data; we'll create one along with\na ",(0,s.jsx)(n.code,{children:"PersistentVolumeClaim"}),". In this case, we're claiming the whole volume - but\nclaims can ask for only part of a volume as well."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/postgres-storage.yaml\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: postgres-storage\n  namespace: backstage\n  labels:\n    type: local\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 2G\n  accessModes:\n    - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  hostPath:\n    path: '/mnt/data'\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: postgres-storage-claim\n  namespace: backstage\nspec:\n  storageClassName: manual\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 2G\n"})}),"\n",(0,s.jsx)(n.p,{children:"This file contains definitions for two different kinds, separated by a line with\na triple dash. This syntax is helpful if you want to consolidate related\nKubernetes definitions in a single file and apply them at the same time."}),"\n",(0,s.jsxs)(n.p,{children:["Note the volume ",(0,s.jsx)(n.code,{children:"type: local"}),"; this creates a volume using local disk on\nKubernetes nodes. More likely in a production scenario, you'd want to use a more\nhighly available\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#types-of-persistent-volumes",children:"type of PersistentVolume"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Apply the storage volume and claim to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/postgres-storage.yaml\npersistentvolume/postgres-storage created\npersistentvolumeclaim/postgres-storage-claim created\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-postgresql-deployment",children:"Creating a PostgreSQL deployment"}),"\n",(0,s.jsx)(n.p,{children:"Now we can create a Kubernetes Deployment descriptor for the PostgreSQL database\ndeployment itself:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/postgres.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgres\n  namespace: backstage\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgres\n  template:\n    metadata:\n      labels:\n        app: postgres\n    spec:\n      containers:\n        - name: postgres\n          image: postgres:13.2-alpine\n          imagePullPolicy: 'IfNotPresent'\n          ports:\n            - containerPort: 5432\n          envFrom:\n            - secretRef:\n                name: postgres-secrets\n          volumeMounts:\n            - mountPath: /var/lib/postgresql/data\n              name: postgresdb\n      volumes:\n        - name: postgresdb\n          persistentVolumeClaim:\n            claimName: postgres-storage-claim\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you're not used to Kubernetes, this is a lot to take in. We're describing a\nDeployment (one or more instances of an application) that we'd like Kubernetes\nto know about in the ",(0,s.jsx)(n.code,{children:"metadata"})," block."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"spec"})," block describes the desired state. Here we've requested Kubernetes\ncreate 1 replica (running instance of PostgreSQL), and to create the replica\nwith the given pod ",(0,s.jsx)(n.code,{children:"template"}),", which again contains Kubernetes metadata and a\ndesired state. The template ",(0,s.jsx)(n.code,{children:"spec"})," shows one container, created from the\n",(0,s.jsx)(n.a,{href:"https://hub.docker.com/_/postgres",children:"published"})," ",(0,s.jsx)(n.code,{children:"postgres:13.2-alpine"})," Docker\nimage."]}),"\n",(0,s.jsxs)(n.p,{children:["Note the ",(0,s.jsx)(n.code,{children:"envFrom"})," and ",(0,s.jsx)(n.code,{children:"secretRef"})," - this tells Kubernetes to fill environment\nvariables in the container with values from the Secret we created. We've also\nreferenced the volume created for the deployment, and given it the mount path\nexpected by PostgreSQL."]}),"\n",(0,s.jsx)(n.p,{children:"Apply the PostgreSQL deployment to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/postgres.yaml\ndeployment.apps/postgres created\n\n$ kubectl get pods --namespace=backstage\nNAME                        READY   STATUS    RESTARTS   AGE\npostgres-56c86b8bbc-66pt2   1/1     Running   0          21s\n"})}),"\n",(0,s.jsx)(n.p,{children:"Verify the deployment by connecting to the pod:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl exec -it --namespace=backstage postgres-56c86b8bbc-66pt2 -- /bin/bash\nbash-5.1# psql -U $POSTGRES_USER\npsql (13.2)\nbackstage=# \\q\nbash-5.1# exit\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-postgresql-service",children:"Creating a PostgreSQL service"}),"\n",(0,s.jsx)(n.p,{children:"The database pod is running, but how does another pod connect to it?"}),"\n",(0,s.jsx)(n.p,{children:"Kubernetes pods are transient - they can be stopped, restarted, or created\ndynamically. Therefore we don't want to try to connect to pods directly, but\nrather create a Kubernetes Service. Services keep track of pods and direct\ntraffic to the right place."}),"\n",(0,s.jsx)(n.p,{children:"The final step for our database is to create the service descriptor:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/postgres-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgres\n  namespace: backstage\nspec:\n  selector:\n    app: postgres\n  ports:\n    - port: 5432\n"})}),"\n",(0,s.jsx)(n.p,{children:"Apply the service to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/postgres-service.yaml\nservice/postgres created\n\n$ kubectl get services --namespace=backstage\nNAME       TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)    AGE\npostgres   ClusterIP   10.96.5.103   <none>        5432/TCP   29s\n"})}),"\n",(0,s.jsx)(n.h2,{id:"creating-the-backstage-instance",children:"Creating the Backstage instance"}),"\n",(0,s.jsx)(n.p,{children:"Now that we have PostgreSQL up and ready to store data, we can create the\nBackstage instance. This follows similar steps as the PostgreSQL deployment."}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-backstage-secret",children:"Creating a Backstage secret"}),"\n",(0,s.jsxs)(n.p,{children:["For any Backstage configuration secrets, such as authorization tokens, we can\ncreate a similar Kubernetes Secret as we did\n",(0,s.jsx)(n.a,{href:"#creating-a-postgresql-secret",children:"for PostgreSQL"}),", remembering to base64 encode\nthe values:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/backstage-secrets.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: backstage-secrets\n  namespace: backstage\ntype: Opaque\ndata:\n  GITHUB_TOKEN: VG9rZW5Ub2tlblRva2VuVG9rZW5NYWxrb3ZpY2hUb2tlbg==\n"})}),"\n",(0,s.jsx)(n.p,{children:"Apply the secret to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/backstage-secrets.yaml\nsecret/backstage-secrets created\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-backstage-deployment",children:"Creating a Backstage deployment"}),"\n",(0,s.jsxs)(n.p,{children:["To create the Backstage deployment, first create a ",(0,s.jsx)(n.a,{href:"/docs/deployment/docker",children:"Docker image"}),".\nWe'll use this image to create a Kubernetes deployment. For this example, we'll\nuse the standard host build with the frontend bundled and served from the\nbackend."]}),"\n",(0,s.jsx)(n.p,{children:"First, create a Kubernetes Deployment descriptor:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/backstage.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: backstage\n  namespace: backstage\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: backstage\n  template:\n    metadata:\n      labels:\n        app: backstage\n    spec:\n      containers:\n        - name: backstage\n          image: backstage:1.0.0\n          imagePullPolicy: IfNotPresent\n          ports:\n            - name: http\n              containerPort: 7007\n          envFrom:\n            - secretRef:\n                name: postgres-secrets\n            - secretRef:\n                name: backstage-secrets\n# Uncomment if health checks are enabled in your app:\n# https://backstage.io/docs/plugins/observability#health-checks\n#          readinessProbe:\n#            httpGet:\n#              port: 7007\n#              path: /healthcheck\n#          livenessProbe:\n#            httpGet:\n#              port: 7007\n#              path: /healthcheck\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For production deployments, the ",(0,s.jsx)(n.code,{children:"image"})," reference will usually be a full URL to\na repository on a container registry (for example, ECR on AWS)."]}),"\n",(0,s.jsxs)(n.p,{children:["For testing locally with ",(0,s.jsx)(n.code,{children:"minikube"}),", you can point the local Docker daemon to\nthe ",(0,s.jsx)(n.code,{children:"minikube"})," internal Docker registry and then rebuild the image to install\nit:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ eval $(minikube docker-env)\n$ yarn build-image --tag backstage:1.0.0\n"})}),"\n",(0,s.jsxs)(n.p,{children:["There is no special wiring needed to access the PostgreSQL service. Since it's\nrunning on the same cluster, Kubernetes will inject ",(0,s.jsx)(n.code,{children:"POSTGRES_SERVICE_HOST"})," and\n",(0,s.jsx)(n.code,{children:"POSTGRES_SERVICE_PORT"})," environment variables into our Backstage container.\nThese can be used in the Backstage ",(0,s.jsx)(n.code,{children:"app-config.yaml"})," along with the secrets:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"backend:\n  database:\n    client: pg\n    connection:\n      host: ${POSTGRES_SERVICE_HOST}\n      port: ${POSTGRES_SERVICE_PORT}\n      user: ${POSTGRES_USER}\n      password: ${POSTGRES_PASSWORD}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to rebuild the Docker image after applying ",(0,s.jsx)(n.code,{children:"app-config.yaml"})," changes."]}),"\n",(0,s.jsx)(n.p,{children:"Apply this Deployment to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/backstage.yaml\ndeployment.apps/backstage created\n\n$ kubectl get deployments --namespace=backstage\nNAME        READY   UP-TO-DATE   AVAILABLE   AGE\nbackstage   1/1     1            1           1m\npostgres    1/1     1            1           10m\n\n$ kubectl get pods --namespace=backstage\nNAME                                 READY   STATUS    RESTARTS   AGE\nbackstage-54bfcd6476-n2jkm           1/1     Running   0          58s\npostgres-56c86b8bbc-66pt2            1/1     Running   0          9m\n"})}),"\n",(0,s.jsx)(n.p,{children:"Beautiful! \ud83c\udf89 The deployment and pod are running in the cluster. If you run into\nany trouble, check the container logs from the pod:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"# -f to tail, <pod> -c <container>\n$ kubectl logs --namespace=backstage -f backstage-54bfcd6476-n2jkm -c backstage\n"})}),"\n",(0,s.jsx)(n.h3,{id:"creating-a-backstage-service",children:"Creating a Backstage service"}),"\n",(0,s.jsxs)(n.p,{children:["Like the ",(0,s.jsx)(n.a,{href:"#creating-a-postgresql-service",children:"PostgreSQL service"})," above, we need to\ncreate a Kubernetes Service for Backstage to handle connecting requests to the\ncorrect pods."]}),"\n",(0,s.jsx)(n.p,{children:"Create the Kubernetes Service descriptor:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# kubernetes/backstage-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: backstage\n  namespace: backstage\nspec:\n  selector:\n    app: backstage\n  ports:\n    - name: http\n      port: 80\n      targetPort: http\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"selector"})," here is telling the Service which pods to target, and the port\nmapping translates normal HTTP port 80 to the backend http port (7007) on the\npod."]}),"\n",(0,s.jsx)(n.p,{children:"Apply this Service to the Kubernetes cluster:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ kubectl apply -f kubernetes/backstage-service.yaml\nservice/backstage created\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Now we have a fully operational Backstage deployment! \ud83c\udf89 For a ",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.strong,{children:"grand\nreveal"})}),", you can forward a local port to the service:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"$ sudo kubectl port-forward --namespace=backstage svc/backstage 80:80\nForwarding from 127.0.0.1:80 -> 7007\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This shows port 7007 since ",(0,s.jsx)(n.code,{children:"port-forward"})," doesn't ",(0,s.jsx)(n.em,{children:"really"})," support services, so\nit cheats by looking up the first pod for a service and connecting to the mapped\npod port."]}),"\n",(0,s.jsxs)(n.p,{children:["Note that ",(0,s.jsx)(n.code,{children:"app.baseUrl"})," and ",(0,s.jsx)(n.code,{children:"backend.baseUrl"})," in your ",(0,s.jsx)(n.code,{children:"app-config.yaml"})," should\nmatch what we're forwarding here (port omitted in this example since we're using\nthe default HTTP port 80):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# app-config.yaml\napp:\n  baseUrl: http://localhost\n\norganization:\n  name: Spotify\n\nbackend:\n  baseUrl: http://localhost\n  listen:\n    port: 7007\n  cors:\n    origin: http://localhost\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you're using an ",(0,s.jsx)(n.a,{href:"/docs/auth/",children:"auth provider"}),", it should also have this\naddress configured for the authentication pop-up to work properly."]}),"\n",(0,s.jsxs)(n.p,{children:["Now you can open a browser on your machine to ",(0,s.jsx)(n.a,{href:"http://localhost",children:"localhost"})," and\nbrowse your Kubernetes-deployed Backstage instance. \ud83d\udea2\ud83d\udea2\ud83d\udea2"]}),"\n",(0,s.jsx)(n.h2,{id:"further-steps",children:"Further steps"}),"\n",(0,s.jsx)(n.p,{children:"This is most of the way to a full production deployment of Backstage on\nKubernetes. There's a few additional steps to that will likely be needed beyond\nthe scope of this document."}),"\n",(0,s.jsx)(n.h3,{id:"set-up-a-more-reliable-volume",children:"Set up a more reliable volume"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"PersistentVolume"})," configured above uses ",(0,s.jsx)(n.code,{children:"local"})," Kubernetes node storage.\nThis should be replaced with a cloud volume, network attached storage, or\nsomething more persistent beyond a Kubernetes node."]}),"\n",(0,s.jsx)(n.h3,{id:"expose-the-backstage-service",children:"Expose the Backstage service"}),"\n",(0,s.jsxs)(n.p,{children:["The Kubernetes Service is not exposed for external connections from outside the\ncluster. This is generally done with a Kubernetes\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/concepts/services-networking/ingress/",children:"ingress"})," or\nan\n",(0,s.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/",children:"external load balancer"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"update-the-deployment-image",children:"Update the Deployment image"}),"\n",(0,s.jsxs)(n.p,{children:["To update the Kubernetes deployment to a newly published version of your\nBackstage Docker image, update the image tag reference in ",(0,s.jsx)(n.code,{children:"backstage.yaml"})," and\nthen apply the changes with ",(0,s.jsx)(n.code,{children:"kubectl apply -f kubernetes/backstage.yaml"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"For production purposes, this image tag will generally be a full-fledged URL\npointing to a container registry where built Docker images are hosted. This can\nbe hosted internally in your infrastructure, or a managed one offered by a cloud\nprovider."})]})}const p=function(e={}){const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,Object.assign({},e,{children:(0,s.jsx)(d,e)})):d(e)}},862525:e=>{var n=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var n={},t=0;t<10;t++)n["_"+String.fromCharCode(t)]=t;if("0123456789"!==Object.getOwnPropertyNames(n).map((function(e){return n[e]})).join(""))return!1;var s={};return"abcdefghijklmnopqrst".split("").forEach((function(e){s[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},s)).join("")}catch(r){return!1}}()?Object.assign:function(e,r){for(var a,o,c=function(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),i=1;i<arguments.length;i++){for(var l in a=Object(arguments[i]))t.call(a,l)&&(c[l]=a[l]);if(n){o=n(a);for(var d=0;d<o.length;d++)s.call(a,o[d])&&(c[o[d]]=a[o[d]])}}return c}},371426:(e,n,t)=>{t(862525);var s=t(827378),r=60103;if(n.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var a=Symbol.for;r=a("react.element"),n.Fragment=a("react.fragment")}var o=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c=Object.prototype.hasOwnProperty,i={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var s,a={},l=null,d=null;for(s in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(d=n.ref),n)c.call(n,s)&&!i.hasOwnProperty(s)&&(a[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===a[s]&&(a[s]=n[s]);return{$$typeof:r,type:e,key:l,ref:d,props:a,_owner:o.current}}n.jsx=l,n.jsxs=l},541535:(e,n,t)=>{var s=t(862525),r=60103,a=60106;n.Fragment=60107,n.StrictMode=60108,n.Profiler=60114;var o=60109,c=60110,i=60112;n.Suspense=60113;var l=60115,d=60116;if("function"==typeof Symbol&&Symbol.for){var p=Symbol.for;r=p("react.element"),a=p("react.portal"),n.Fragment=p("react.fragment"),n.StrictMode=p("react.strict_mode"),n.Profiler=p("react.profiler"),o=p("react.provider"),c=p("react.context"),i=p("react.forward_ref"),n.Suspense=p("react.suspense"),l=p("react.memo"),d=p("react.lazy")}var u="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var g={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function b(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||g}function f(){}function y(e,n,t){this.props=e,this.context=n,this.refs=m,this.updater=t||g}b.prototype.isReactComponent={},b.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,n,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},f.prototype=b.prototype;var k=y.prototype=new f;k.constructor=y,s(k,b.prototype),k.isPureReactComponent=!0;var j={current:null},v=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function w(e,n,t){var s,a={},o=null,c=null;if(null!=n)for(s in void 0!==n.ref&&(c=n.ref),void 0!==n.key&&(o=""+n.key),n)v.call(n,s)&&!x.hasOwnProperty(s)&&(a[s]=n[s]);var i=arguments.length-2;if(1===i)a.children=t;else if(1<i){for(var l=Array(i),d=0;d<i;d++)l[d]=arguments[d+2];a.children=l}if(e&&e.defaultProps)for(s in i=e.defaultProps)void 0===a[s]&&(a[s]=i[s]);return{$$typeof:r,type:e,key:o,ref:c,props:a,_owner:j.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}var P=/\/+/g;function _(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function T(e,n,t,s,o){var c=typeof e;"undefined"!==c&&"boolean"!==c||(e=null);var i=!1;if(null===e)i=!0;else switch(c){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case r:case a:i=!0}}if(i)return o=o(i=e),e=""===s?"."+_(i,0):s,Array.isArray(o)?(t="",null!=e&&(t=e.replace(P,"$&/")+"/"),T(o,n,t,"",(function(e){return e}))):null!=o&&(S(o)&&(o=function(e,n){return{$$typeof:r,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(o,t+(!o.key||i&&i.key===o.key?"":(""+o.key).replace(P,"$&/")+"/")+e)),n.push(o)),1;if(i=0,s=""===s?".":s+":",Array.isArray(e))for(var l=0;l<e.length;l++){var d=s+_(c=e[l],l);i+=T(c,n,t,d,o)}else if(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=u&&e[u]||e["@@iterator"])?e:null}(e),"function"==typeof d)for(e=d.call(e),l=0;!(c=e.next()).done;)i+=T(c=c.value,n,t,d=s+_(c,l++),o);else if("object"===c)throw n=""+e,Error(h(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n));return i}function E(e,n,t){if(null==e)return e;var s=[],r=0;return T(e,s,"","",(function(e){return n.call(t,e,r++)})),s}function R(e){if(-1===e._status){var n=e._result;n=n(),e._status=0,e._result=n,n.then((function(n){0===e._status&&(n=n.default,e._status=1,e._result=n)}),(function(n){0===e._status&&(e._status=2,e._result=n)}))}if(1===e._status)return e._result;throw e._result}var C={current:null};function N(){var e=C.current;if(null===e)throw Error(h(321));return e}var O={ReactCurrentDispatcher:C,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:j,IsSomeRendererActing:{current:!1},assign:s};n.Children={map:E,forEach:function(e,n,t){E(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return E(e,(function(){n++})),n},toArray:function(e){return E(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(h(143));return e}},n.Component=b,n.PureComponent=y,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,n.cloneElement=function(e,n,t){if(null==e)throw Error(h(267,e));var a=s({},e.props),o=e.key,c=e.ref,i=e._owner;if(null!=n){if(void 0!==n.ref&&(c=n.ref,i=j.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(d in n)v.call(n,d)&&!x.hasOwnProperty(d)&&(a[d]=void 0===n[d]&&void 0!==l?l[d]:n[d])}var d=arguments.length-2;if(1===d)a.children=t;else if(1<d){l=Array(d);for(var p=0;p<d;p++)l[p]=arguments[p+2];a.children=l}return{$$typeof:r,type:e.type,key:o,ref:c,props:a,_owner:i}},n.createContext=function(e,n){return void 0===n&&(n=null),(e={$$typeof:c,_calculateChangedBits:n,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},n.createElement=w,n.createFactory=function(e){var n=w.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:i,render:e}},n.isValidElement=S,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:R}},n.memo=function(e,n){return{$$typeof:l,type:e,compare:void 0===n?null:n}},n.useCallback=function(e,n){return N().useCallback(e,n)},n.useContext=function(e,n){return N().useContext(e,n)},n.useDebugValue=function(){},n.useEffect=function(e,n){return N().useEffect(e,n)},n.useImperativeHandle=function(e,n,t){return N().useImperativeHandle(e,n,t)},n.useLayoutEffect=function(e,n){return N().useLayoutEffect(e,n)},n.useMemo=function(e,n){return N().useMemo(e,n)},n.useReducer=function(e,n,t){return N().useReducer(e,n,t)},n.useRef=function(e){return N().useRef(e)},n.useState=function(e){return N().useState(e)},n.version="17.0.2"},827378:(e,n,t)=>{e.exports=t(541535)},824246:(e,n,t)=>{e.exports=t(371426)},511151:(e,n,t)=>{t.d(n,{Zo:()=>c,ah:()=>a});var s=t(667294);const r=s.createContext({});function a(e){const n=s.useContext(r);return s.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function c({components:e,children:n,disableParentContext:t}){let c;return c=t?"function"==typeof e?e({}):e||o:a(e),s.createElement(r.Provider,{value:c},n)}}}]);